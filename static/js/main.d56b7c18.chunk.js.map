{"version":3,"sources":["components/Logo.svg","components/GitHubSVG.svg","translate.js","components/Header.lang.js","components/Header.js","components/Footer.js","components/Layout.js","components/SEO.js","pages/Home/index.js","pages/Blog/index.lang.js","pages/Blog/posts.js","pages/Blog/index.js","pages/Contact/index.lang.js","pages/Contact/index.js","pages/NotFound/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","translate","map","lang","key","val","Error","concat","LANG","en","Blog","Contact","jp","withRouter","props","getPath","_location$pathname$sp","location","pathname","split","rest","Object","toArray","slice","toConsumableArray","join","enPath","jpPath","react_default","a","createElement","Menu","stackable","borderless","fluid","Container_Container","Item","header","as","href","src","Logo","alt","className","position","Fotter","prop","Container_default","Layout","children","components_Header","components_Footer","SEO","_ref","title","description","meta","keywords","Helmet_default","htmlAttributes","name","content","property","length","defaultProps","Home","components_Layout","components_SEO","Posts","PostsByYear","_groupByYear","posts","grouped","reduce","post","year","moment","date","push","years","keys","sort","b","parseInt","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","unix","err","return","byYear","groupByYear","i","j","panes","menuItem","render","filter","ACTIVE_INDEX","Tab","menu","secondary","defaultActiveIndex","NotFound","App","react_router_dom","basename","process","react_router","exact","path","component","Component","pages_Blog","assign","pages_Contact","pages_Home","from","to","Boolean","window","hostname","match","rootElement","document","getElementById","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d56b7c18.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.5b23e9dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/GitHubSVG.04b97721.svg\";","export default function translate(map, lang, key) {\n  const val = map[lang][key]\n\n  if (!val) {\n    throw new Error(`Undefined translation key: ${key}, lang: ${lang}`)\n  }\n\n  return val\n}\n","const LANG = {\n  en: {\n    Blog: \"Blog\",\n    Contact: \"Contact\",\n  },\n  jp: {\n    Blog: \"ブログ\",\n    Contact: \"お問い合わせ\",\n  },\n}\n\nexport default LANG\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { withRouter } from \"react-router-dom\"\nimport { Menu, Container } from \"semantic-ui-react\"\nimport \"./Header.css\"\nimport translate from \"../translate\"\nimport LANG from \"./Header.lang\"\nimport Logo from \"./Logo.svg\"\n\nexport function Header(props) {\n  const { lang } = props\n\n  function getPath(lang) {\n    const { location } = props\n\n    // split url into root, lang, rest of path\n    const [, , ...rest] = location.pathname.split(\"/\")\n\n    return [\"\", lang, ...rest].join(\"/\")\n  }\n\n  const enPath = getPath(\"en\")\n  const jpPath = getPath(\"jp\")\n\n  return (\n    <Menu stackable borderless fluid>\n      <Container>\n        <Menu.Item header as=\"a\" href=\"/\">\n          <img src={Logo} alt=\"logo\" />\n          <span className=\"Header-logo-text\">SMART CONTRACT PROGRAMMER</span>\n        </Menu.Item>\n\n        <Menu.Menu position=\"right\">\n          <Menu.Item as=\"a\" href={`/${lang}/blog`}>\n            {translate(LANG, lang, \"Blog\")}\n          </Menu.Item>\n          <Menu.Item as=\"a\" href={`/${lang}/contact`}>\n            {translate(LANG, lang, \"Contact\")}\n          </Menu.Item>\n\n          {lang == \"en\" ? (\n            <Menu.Item as=\"a\" href={jpPath}>\n              Japanese\n            </Menu.Item>\n          ) : (\n            <Menu.Item as=\"a\" href={enPath}>\n              English\n            </Menu.Item>\n          )}\n        </Menu.Menu>\n      </Container>\n    </Menu>\n  )\n}\n\nHeader.propTypes = {\n  lang: PropTypes.oneOf([\"en\", \"jp\"]).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default withRouter(Header)\n","import React from \"react\"\nimport Container from \"react-bootstrap/Container\"\nimport GitHubSVG from \"./GitHubSVG.svg\"\nimport \"./Footer.css\"\n\n// TODO footer\nexport function Fotter(prop) {\n  return (\n    <footer className=\"Footer\">\n      <Container>\n        {/*}\n        <a href=\"https://github.com/t4sk\" target=\"_blank\">\n          <img src={GitHubSVG} alt=\"GitHub\" />\n        </a>\n        */}\n      </Container>\n    </footer>\n  )\n}\n\nexport default Fotter\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Container from \"react-bootstrap/Container\"\nimport \"./Layout.css\"\nimport Header from \"./Header\"\nimport Footer from \"./Footer\"\n\nexport function Layout(props) {\n  const { children, lang } = props\n\n  return (\n    <div className=\"Layout\">\n      <Header lang={lang} />\n      <Container>\n        <div className=\"Layout-main\">{children}</div>\n      </Container>\n      <Footer />\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  lang: PropTypes.oneOf([\"en\", \"jp\"]).isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\n\nfunction SEO({ title, description, lang, meta, keywords }) {\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      meta={[\n        {\n          name: `description`,\n          content: description,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: description,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [\"smart contract\", \"solidity\", \"ethereum\"],\n  description: \"Learn how to program smart contracts.\",\n}\n\nSEO.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  lang: PropTypes.oneOf([\"en\", \"jp\"]).isRequired,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Layout from \"../../components/Layout\"\nimport SEO from \"../../components/SEO\"\n\nfunction Home(props) {\n  const { lang } = props\n\n  return (\n    <Layout lang={lang}>\n      <SEO title=\"Smart Contract Programmer\" lang={lang} />\n    </Layout>\n  )\n}\n\nHome.propTypes = {\n  lang: PropTypes.oneOf([\"en\", \"jp\"]).isRequired,\n}\n\nexport default Home\n","const LANG = {\n  en: {\n    Blog: \"Blog\",\n  },\n  jp: {\n    Blog: \"ブログ\",\n  },\n}\n\nexport default LANG\n","const Posts = []\n\nexport default Posts\n","import React from \"react\"\nimport moment from \"moment\"\nimport PropTypes from \"prop-types\"\nimport { Tab } from \"semantic-ui-react\"\nimport Layout from \"../../components/Layout\"\nimport SEO from \"../../components/SEO\"\nimport \"./index.css\"\nimport LANG from \"./index.lang\"\nimport translate from \"../../translate\"\n\n// import Posts from \"./posts-bk\"\nimport Posts from \"./posts\"\n\nexport function groupByYear(posts) {\n  const grouped = posts.reduce((grouped, post) => {\n    const year = moment(post.date).year()\n\n    if (grouped[year]) {\n      grouped[year].push(post)\n    } else {\n      grouped[year] = [post]\n    }\n\n    return grouped\n  }, {})\n\n  const years = Object.keys(grouped).sort((a, b) => parseInt(b) - parseInt(a))\n\n  // sort posts by date desc\n  for (let year of years) {\n    grouped[year].sort((a, b) => moment(b.date).unix() - moment(a.date).unix())\n  }\n\n  return {\n    years,\n    byYear: grouped,\n  }\n}\n\nfunction PostsByYear(props) {\n  const { posts } = props\n\n  const { years, byYear } = groupByYear(posts)\n\n  return years.map((year, i) => (\n    <div className=\"Blog-posts-by-year\" key={i}>\n      <h3>{year}</h3>\n      <ul className=\"Blog-list\">\n        {byYear[year].map((post, j) => (\n          <li key={j}>\n            <div className=\"Blog-post\">\n              <div className=\"Blog-date\">{post.date}</div>\n              <a href={`/${post.lang}/blog/${post.date}`}>{post.title}</a>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  ))\n}\n\nconst panes = [\n  {\n    menuItem: \"English\",\n    render: () => (\n      <PostsByYear posts={Posts.filter(post => post.lang == \"en\")} />\n    ),\n  },\n  {\n    menuItem: \"Japanese\",\n    render: () => (\n      <PostsByYear posts={Posts.filter(post => post.lang == \"jp\")} />\n    ),\n  },\n]\n\nconst ACTIVE_INDEX = {\n  en: 0,\n  jp: 1,\n}\n\nfunction Blog(props) {\n  const { lang } = props\n\n  const title = `${translate(LANG, lang, \"Blog\")} | Smart Contract Programmer`\n\n  return (\n    <Layout lang={lang}>\n      <SEO title={title} lang={lang} />\n      <Tab\n        menu={{ secondary: true }}\n        defaultActiveIndex={ACTIVE_INDEX[lang]}\n        panes={panes}\n      />\n    </Layout>\n  )\n}\n\nBlog.propTypes = {\n  lang: PropTypes.oneOf([\"en\", \"jp\"]).isRequired,\n}\n\nexport default Blog\n","const LANG = {\n  en: {\n    Contact: \"Contact\",\n  },\n  jp: {\n    Contact: \"お問い合わせ\",\n  },\n}\n\nexport default LANG\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Layout from \"../../components/Layout\"\nimport SEO from \"../../components/SEO\"\nimport \"./index.css\"\nimport translate from \"../../translate\"\nimport LANG from \"./index.lang\"\n\nfunction Contact(props) {\n  const { lang } = props\n\n  const title = `${translate(\n    LANG,\n    lang,\n    \"Contact\"\n  )} | Smart Contract Programmer`\n  return (\n    <Layout lang={lang}>\n      <SEO title={title} lang={lang} />\n      <h3>{translate(LANG, lang, \"Contact\")}</h3>\n      <div>smartcontractprogrammer@gmail.com</div>\n    </Layout>\n  )\n}\n\nContact.propTypes = {\n  lang: PropTypes.oneOf([\"en\", \"jp\"]).isRequired,\n}\n\nexport default Contact\n","import React from \"react\"\nimport Layout from \"../../components/Layout\"\nimport SEO from \"../../components/SEO\"\nimport \"./index.css\"\n\nfunction NotFound(props) {\n  return (\n    <Layout lang=\"en\">\n      <SEO title=\"Not Found | Smart Contract Programmer\" lang=\"en\" />\n      <div className=\"NotFound\">\n        <h1 className=\"NotFound-header\">404</h1>\n        <div className=\"NotFound-sub-header\">Not Found</div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default NotFound\n","import React from \"react\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\"\nimport Home from \"./pages/Home\"\nimport Blog from \"./pages/Blog\"\nimport Contact from \"./pages/Contact\"\nimport Posts from \"./pages/Blog/posts\"\nimport NotFound from \"./pages/NotFound\"\n\nfunction createPostRoutes(posts) {\n  return posts.map((post, i) => {\n    return (\n      <Route\n        key={`${post.lang}-${i}`}\n        exact\n        path={`/${post.lang}/blog/${post.date}`}\n        component={post.Component}\n      />\n    )\n  })\n}\n\nexport function App(props) {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        {createPostRoutes(Posts)}\n        <Route\n          exact\n          path=\"/en/blog\"\n          render={props => <Blog {...props} lang=\"en\" />}\n        />\n        <Route\n          exact\n          path=\"/jp/blog\"\n          render={props => <Blog {...props} lang=\"jp\" />}\n        />\n        <Route\n          exact\n          path=\"/en/contact\"\n          render={props => <Contact {...props} lang=\"en\" />}\n        />\n        <Route\n          exact\n          path=\"/jp/contact\"\n          render={props => <Contact {...props} lang=\"jp\" />}\n        />\n        <Route\n          exact\n          path=\"/en\"\n          render={props => <Home {...props} lang=\"en\" />}\n        />\n        <Route\n          exact\n          path=\"/jp\"\n          render={props => <Home {...props} lang=\"jp\" />}\n        />\n        <Redirect exact from=\"/\" to=\"/en\" />\n        <Route component={NotFound} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport { render } from \"react-dom\"\nimport \"semantic-ui-css/semantic.min.css\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nconst rootElement = document.getElementById(\"root\")\nrender(<App />, rootElement)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}